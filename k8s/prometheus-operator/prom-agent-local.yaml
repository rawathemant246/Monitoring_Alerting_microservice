apiVersion: v1
kind: ServiceAccount
metadata:
  name: prom-agent
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prom-agent
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources:
      - endpointslices
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prom-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prom-agent
subjects:
  - kind: ServiceAccount
    name: prom-agent
    namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prom-agent-config
  namespace: monitoring
  labels:
    app: prom-agent
    managed-by: local
    role: config
  annotations:
    prometheus.io/role: config
  
data:
  prometheus-agent.yaml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
    remote_write:
      - url: http://mimir.monitoring.svc:8080/api/v1/push
    scrape_configs:
      - job_name: "kubernetes-service-endpoints"
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node
      - job_name: "mimir-self"
        metrics_path: /metrics
        static_configs:
          - targets:
              - mimir.monitoring.svc:8080
              - alertmanager-alertmanager.monitoring.svc:9093
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-agent
  namespace: monitoring
  labels:
    app: prom-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prom-agent
  template:
    metadata:
      labels:
        app: prom-agent
    spec:
      serviceAccountName: prom-agent
      containers:
        - name: prometheus-agent
          image: prom/prometheus:v2.53.0
          args:
            - "--config.file=/etc/prometheus/prometheus-agent.yaml"
            - "--enable-feature=agent"
            - "--log.format=json"
            - "--log.level=info"
          ports:
            - containerPort: 9090
              name: http
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: prom-agent-config
            items:
              - key: prometheus-agent.yaml
                path: prometheus-agent.yaml
