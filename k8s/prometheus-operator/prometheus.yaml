apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: mimir
  namespace: monitoring
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: mimir-observability
spec:
  replicas: 2
  shards: 4
  retention: 48h
  serviceAccountName: prometheus
  version: v2.49.0
  ruleSelector:
    matchLabels:
      app.kubernetes.io/part-of: mimir-observability
  ruleNamespaceSelector:
    matchLabels:
      monitoring.grafana.com/shared-rules: "true"
  serviceMonitorSelector:
    matchLabels:
      app.kubernetes.io/part-of: mimir-observability
  serviceMonitorNamespaceSelector:
    matchLabels:
      monitoring.grafana.com/scope: monitoring
  podMonitorSelector:
    matchLabels:
      app.kubernetes.io/part-of: mimir-observability
  podMonitorNamespaceSelector:
    matchLabels:
      monitoring.grafana.com/scope: monitoring
  probeSelector:
    matchLabels:
      app.kubernetes.io/part-of: mimir-observability
  alerting:
    alertmanagers:
      - namespace: monitoring
        name: alertmanager-operated
        port: web
        scheme: https
        tlsConfig:
          ca:
            secret:
              name: monitoring-ca
              key: ca.crt
          cert:
            secret:
              name: prometheus-mtls
              key: tls.crt
          keySecret:
            name: prometheus-mtls
            key: tls.key
  storage:
    volumeClaimTemplate:
      metadata:
        labels:
          app.kubernetes.io/part-of: mimir-observability
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 200Gi
        storageClassName: gp3
  resources:
    requests:
      cpu: "2"
      memory: 12Gi
    limits:
      cpu: "4"
      memory: 24Gi
  securityContext:
    fsGroup: 2000
  enableAdminAPI: false
  walCompression: true
  retentionSize: "0"
  scrapeInterval: 30s
  evaluationInterval: 30s
  additionalScrapeConfigs:
    name: prometheus-additional-scrape
    key: scrape-configs.yaml
  remoteWrite:
    - url: https://mimir-distributor.monitoring.svc.cluster.local/api/v1/push
      tlsConfig:
        ca:
          secret:
            name: monitoring-ca
            key: ca.crt
        cert:
          secret:
            name: prometheus-mtls
            key: tls.crt
        keySecret:
          name: prometheus-mtls
          key: tls.key
      queueConfig:
        capacity: 30000
        maxShards: 24
        minShards: 4
        maxSamplesPerSend: 10000
        batchSendDeadline: 10s
      metadataConfig:
        send: true
        sendInterval: 1m
      writeRelabelConfigs:
        - action: labeldrop
          regex: "(pod_uid|container_id|build_sha)"
        - action: replace
          targetLabel: tenant_id
          replacement: "${TENANT_ID}"
      bearerTokenSecret:
        name: mimir-remote-write
        key: token
      sendExemplars: true
  externalLabels:
    cluster: "${CLUSTER_NAME}"
    environment: "${ENVIRONMENT}"
  podMetadata:
    labels:
      sidecar.istio.io/inject: "true"
      monitoring.grafana.com/class: infra
  nodeSelector:
    node.kubernetes.io/instance-type: m6i.2xlarge
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          prometheus: mimir
  thanos:
    baseImage: quay.io/thanos/thanos
    version: v0.34.0
    resources:
      requests:
        cpu: 250m
        memory: 1Gi
