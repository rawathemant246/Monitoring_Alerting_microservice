alertmanager:
  alertmanagerSpec:
    replicas: 3
    retention: 120h
    silencesRetention: 720h
    storage:
      volumeClaimTemplate:
        metadata:
          labels:
            app.kubernetes.io/part-of: mimir-observability
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
          storageClassName: gp3
    podMetadata:
      labels:
        monitoring.grafana.com/class: infra
    securityContext:
      fsGroup: 65534
    meshPeer:
      port: 6783
    podAntiAffinity: "soft"
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            alertmanager: k8s
    configSecret: alertmanager-config
    additionalPeers:
      - alertmanager-operated.monitoring.svc.cluster.local:6783
    web:
      tlsConfig:
        secretName: alertmanager-mtls
        caSecretName: monitoring-ca
      externalUri: https://alertmanager.${BASE_DOMAIN}
  configSecret:
    name: alertmanager-config
    annotations: {}
  configMap:
    create: false
  config:
    global:
      resolve_timeout: 5m
      http_config:
        tls_config:
          ca_file: /etc/alertmanager/tls/ca.crt
          cert_file: /etc/alertmanager/tls/tls.crt
          key_file: /etc/alertmanager/tls/tls.key
    route:
      group_by: ['alertname','tenant_id']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: default
      routes:
        - matchers:
            - severity="page"
          receiver: pagerduty
        - matchers:
            - severity="critical"
          receiver: pagerduty
        - matchers:
            - severity="info"
          receiver: webhook
    receivers:
      - name: default
        email_configs:
          - to: ${ONCALL_EMAIL}
            send_resolved: true
      - name: pagerduty
        pagerduty_configs:
          - routing_key: ${PD_KEY}
            severity: '{{ if eq .CommonLabels.severity "warning" }}warning{{ else }}critical{{ end }}'
            send_resolved: true
      - name: webhook
        webhook_configs:
          - url: ${WEBHOOK_URL}
            send_resolved: true
    inhibit_rules:
      - source_matchers: ['severity="critical"']
        target_matchers: ['severity="warning"']
        equal: ['alertname','tenant_id']
      - source_matchers: ['severity="warning"']
        target_matchers: ['severity="info"']
        equal: ['alertname','tenant_id']
  extraVolumes:
    - name: tls
      secret:
        secretName: alertmanager-mtls
    - name: receiver-secrets
      secret:
        secretName: alertmanager-receiver-secrets
  extraVolumeMounts:
    - name: tls
      mountPath: /etc/alertmanager/tls
      readOnly: true
    - name: receiver-secrets
      mountPath: /etc/alertmanager/receivers
      readOnly: true
